---
import type { Lesson } from './training.model'

interface Training {
  slug: string;
  lessons: Lesson[];
}

const trainings: Training[] = [
  {
    slug: 'intro-astro',
    lessons: [
      {
        id: '1',
        slug: 'alternativa-redux',
        title: '[Zustand] 1. Alternativa Sencilla a Redux y Context',
        video: 'https://www.youtube.com/embed/LtEOBAEwNOU',
        content: 'Este video presenta Zustand como una alternativa a Redux y Context API.'
      },
      {
        id: '2',
        slug: 'selectores-rendimiento',
        title: '[Zustand] 2. Hola Selectores y Rendimiento',
        video: 'https://www.youtube.com/embed/k5wUZjxF8Qw',
        content: 'Exploramos c칩mo los selectores ayudan a mejorar el rendimiento.'
      },
      {
        id: '3',
        slug: 'use-shallow',
        title: '[Zustand] 3. useShallow',
        video: 'https://www.youtube.com/embed/YnEy6Xyld9w',
        content: 'Uso de useShallow para evitar renders innecesarios.'
      },
    ],
  },
  {
    slug: 'tailwind-css',
    lessons: [
      {
        id: '4',
        slug: 'actualizar-estado',
        title: '[Zustand] 4. Actualizando Objetos en el Estado',
        video: 'https://www.youtube.com/embed/Erg8B8Fs5FY',
        content: 'Aprendemos a actualizar objetos en el estado global.'
      },
      {
        id: '5',
        slug: 'alternativa-redux',
        title: '[Zustand] 1. Alternativa Sencilla a Redux y Context',
        video: 'https://www.youtube.com/embed/LtEOBAEwNOU',
        content: 'Zustand como alternativa simple a Redux.'
      },
      {
        id: '6',
        slug: 'selectores-rendimiento',
        title: '[Zustand] 2. Hola Selectores y Rendimiento',
        video: 'https://www.youtube.com/embed/k5wUZjxF8Qw',
        content: 'Selectores eficientes para apps reactivas.'
      },
    ],
  },
];

// Exporta slugs para rutas est치ticas
export async function getStaticPaths() {
const trainings: Training[] = [
  {
    slug: 'intro-astro',
    lessons: [
      {
        id: '1',
        slug: 'alternativa-redux',
        title: '[Zustand] 1. Alternativa Sencilla a Redux y Context',
        video: 'https://www.youtube.com/embed/LtEOBAEwNOU',
        content: 'Este video presenta Zustand como una alternativa a Redux y Context API.'
      },
      {
        id: '2',
        slug: 'selectores-rendimiento',
        title: '[Zustand] 2. Hola Selectores y Rendimiento',
        video: 'https://www.youtube.com/embed/k5wUZjxF8Qw',
        content: 'Exploramos c칩mo los selectores ayudan a mejorar el rendimiento.'
      },
      {
        id: '3',
        slug: 'use-shallow',
        title: '[Zustand] 3. useShallow',
        video: 'https://www.youtube.com/embed/YnEy6Xyld9w',
        content: 'Uso de useShallow para evitar renders innecesarios.'
      },
    ],
  },
  {
    slug: 'tailwind-css',
    lessons: [
      {
        id: '4',
        slug: 'actualizar-estado',
        title: '[Zustand] 4. Actualizando Objetos en el Estado',
        video: 'https://www.youtube.com/embed/Erg8B8Fs5FY',
        content: 'Aprendemos a actualizar objetos en el estado global.'
      },
      {
        id: '5',
        slug: 'alternativa-redux',
        title: '[Zustand] 1. Alternativa Sencilla a Redux y Context',
        video: 'https://www.youtube.com/embed/LtEOBAEwNOU',
        content: 'Zustand como alternativa simple a Redux.'
      },
      {
        id: '6',
        slug: 'selectores-rendimiento',
        title: '[Zustand] 2. Hola Selectores y Rendimiento',
        video: 'https://www.youtube.com/embed/k5wUZjxF8Qw',
        content: 'Selectores eficientes para apps reactivas.'
      },
    ],
  },
];


  return trainings.map(training => ({
    params: { slug: training.slug },
  }));
}

// Obtenemos slug actual
const { slug } = Astro.params;
const currentTraining = trainings.find(t => t.slug === slug);

if (!currentTraining) {
  throw new Error(`Training not found: ${slug}`);
}

const lessons: Lesson[] = currentTraining.lessons;

import '../../styles/tailwind.css';
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>Curso - Lecciones</title>
  </head>
<body class="bg-gray-50 text-gray-900 font-sans">
  <div class="max-w-7xl mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8 text-center">Lecciones del Curso</h1>

    <!-- Contenedor principal: video + lecciones -->
    <div class="grid md:grid-cols-12 gap-6">
      <!-- Video (col-span-8 en pantallas md+) -->
      <div class="md:col-span-8">
        <div class="aspect-video w-full rounded-2xl overflow-hidden shadow-lg border border-gray-200">
          <iframe
            id="videoFrame"
            src={lessons[0].video}
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
            class="w-full h-full"
          ></iframe>
        </div>
        <h2 id="lessonTitle" class="mt-4 text-2xl font-semibold">{lessons[0].title}</h2>
      </div>

      <!-- Lista de lecciones -->
      <div class="md:col-span-4">
        <div class="bg-white rounded-2xl shadow-md p-4 space-y-2 border border-gray-200">
          <h3 class="text-lg font-medium mb-2 text-gray-800">Lecciones</h3>
          {lessons.map((lesson) => (
            <button
              class="block w-full text-left px-4 py-2 rounded-lg hover:bg-gray-100 transition text-sm text-gray-700 border border-transparent hover:border-gray-300"
              data-video={lesson.video}
              data-title={lesson.title}
              data-content={lesson.content}
            >
              {lesson.title}
            </button>
          ))}
        </div>
      </div>
    </div>

    <!-- Contenido debajo del video -->
    <div class="mt-10 bg-white p-6 rounded-2xl shadow-md border border-gray-200">
      <h3 class="text-xl font-bold mb-4 text-gray-800">Contenido de la Lecci칩n</h3>
      <p id="lessonContent" class="text-gray-700 leading-relaxed text-base">
        {lessons[0].content}
      </p>
    </div>
  </div>

  <script type="module">
    document.querySelectorAll('button[data-video]').forEach(button => {
      button.addEventListener('click', () => {
        const video = button.getAttribute('data-video');
        const title = button.getAttribute('data-title');
        const content = button.getAttribute('data-content');

        const videoFrame = document.getElementById('videoFrame');
        const lessonTitle = document.getElementById('lessonTitle');
        const lessonContent = document.getElementById('lessonContent');

        if (videoFrame) videoFrame.setAttribute('src', video);
        if (lessonTitle) lessonTitle.textContent = title;
        if (lessonContent) lessonContent.textContent = content;
      });
    });
  </script>
</body>
</html>